--sort=yes

--exclude=*.min.*
--exclude=*.spec.*
--exclude=*.test.*
--exclude=*.tar.*
--exclude=*.bundle.*
--exclude=.bak
--exclude=.cache
--exclude=.class
--exclude=.csproj
--exclude=.csproj.user
--exclude=.dll
--exclude=.map
--exclude=.pdb
--exclude=.pyc
--exclude=.sln
--exclude=.swp
--exclude=.tmp
--exclude=coverage
--exclude=cscope.*
--exclude=dist
--exclude=min
--exclude=tags
--exclude=test
--exclude=tests
--exclude=vendor
--exclude=node_modules
--exclude=package.json
--exclude=package-lock.json

--langmap=typescript:.ts
--langmap=typescript:+.tsx
--regex-typescript=/^[ \t]*function[ \t]*\([A-Za-z0-9_$]\{1,\}\)[ \t(]/\1/f,function,functions/b
--regex-typescript=/^[ \t]*[(]function[ \t]*\([A-Za-z0-9_$]\{1,\}\)[ \t(]/\1/f,function,functions/b
--regex-typescript=/^[ \t]*async[ \t]*\([A-Za-z0-9_$]\{1,\}\)[ \t(]/\1/f,function,functions/b
--regex-typescript=/^[ \t]*async[ \t]function[ \t]*\([A-Za-z0-9_$]\{1,\}\)[ \t(]/\1/f,function,functions/b
--regex-typescript=/^[ \t]*[(]async[ \t]function[ \t]*\([A-Za-z0-9_$]\{1,\}\)[ \t(]/\1/f,function,functions/b
--regex-typescript=/^[ \t]*(var|let|const)[ \t]\{1,\}\([A-Za-z0-9_$]\{1,\}\)[ \t]*=[ \t]*\(async[ \t]\{1,\}\)*function[^\*][^\*]/\1/f,function,functions/b
--regex-typescript=/^[ \t]*(var|let|const)[ \t]\{1,\}\([A-Za-z0-9_$]\{1,\}\)[ \t]*=[ \t]*([^)]*$/\1/f,function,functions/b
--regex-typescript=/^[ \t]*(var|let|const)[ \t]\{1,\}\([A-Za-z0-9_$]\{1,\}\)[ \t]*=.\{1,\}=>/\1/f,function,functions/b
--regex-typescript=/^[ \t]*(export([ \t]+abstract)?([ \t]+default)?)?[ \t]*class[ \t]+([a-zA-Z0-9_]+)/\4/c,classes/
--regex-typescript=/^[ \t]*\([A-Za-z0-9_$]\+\)[ \t]*:[ \t]*\(async[ \t]*\)\?[ \t]*[(]/\1/m,method,methods/b
--regex-typescript=/^[ \t]*\([A-Za-z0-9_$]\{1,\}\)[ \t]*=[ \t]*\(async[ \t]*\)\?[ \t]*[(]/\1/m,method,methods/b
--regex-typescript=/^[ \t]*(declare)?[ \t]*namespace[ \t]+([a-zA-Z0-9_]+)/\2/n,modules/
--regex-typescript=/^[ \t]*(export)?[ \t]*module[ \t]+([a-zA-Z0-9_]+)/\2/M,modules/
--regex-typescript=/^[ \t]*(export)?[ \t]*function[ \t]+([a-zA-Z0-9_]+)/\2/f,functions/
--regex-typescript=/^[ \t]*export[ \t]+(var|let|const)[ \t]+([a-zA-Z0-9_]+)/\2/v,variables/
--regex-typescript=/^[ \t]*(var|let|const)[ \t]+([a-zA-Z0-9_]+)[ \t]*=[ \t]*function[ \t]*\(\)/\2/V,varlambdas/
--regex-typescript=/^[ \t]*(export)?[ \t]*(public|protected|private)[ \t]+(static)?[ \t]*([a-zA-Z0-9_]+)/\4/m,members/
--regex-typescript=/^[ \t]*(export)?[ \t]*interface[ \t]+([a-zA-Z0-9_]+)/\2/i,interfaces/
--regex-typescript=/^[ \t]*(export)?[ \t]*type[ \t]+([a-zA-Z0-9_]+)/\2/t,types/
--regex-typescript=/^[ \t]*(export)?[ \t]*enum[ \t]+([a-zA-Z0-9_]+)/\2/e,enums/
--regex-typescript=/^[ \t]*import[ \t]+([a-zA-Z0-9_]+)/\1/I,imports/
--regex-typescript=/^[ \t]*@([A-Za-z0-9._$]+)[ \t]*/\1/d,decorator/

--regex-javascript=/^[ \t]*([A-Za-z_$][A-Za-z0-9_$]*)[ \t]*:[ \t]*function/\1/f,function/
--regex-javascript=/^[ \t]*([A-Za-z_$][A-Za-z0-9_$]*)[ \t]*:[ \t]*\(async[ \t]*\)\?(/\1/f,function/
--regex-javascript=/^[ \t]*function[ \t]+([A-Za-z_$][A-Za-z0-9_$]*)[ \t]*\(/\1/f,function/
--regex-javascript=/^[ \t]*const[ \t]+([A-Za-z_$][A-Za-z0-9_$]*)[ \t]*=[ \t]*\(/\1/f,function/
--regex-javascript=/^[ \t]*let[ \t]+([A-Za-z_$][A-Za-z0-9_$]*)[ \t]*=[ \t]*\(/\1/f,function/
--regex-javascript=/^[ \t]*var[ \t]+([A-Za-z_$][A-Za-z0-9_$]*)[ \t]*=[ \t]*\(/\1/f,function/
--regex-javascript=/^[ \t]*class[ \t]+([A-Za-z_$][A-Za-z0-9_$]*)/\1/c,class/
