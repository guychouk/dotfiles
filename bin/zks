#!/usr/bin/env python3

import re
import os
import sys
import getopt
import sqlite3
from pathlib import Path

def check_key_dict_list(key, dict):
    for i in dict:
        if i == key:
            return True
    return False

db = sqlite3.connect(os.getcwd() + '/index.db')
db.row_factory = sqlite3.Row

db.execute('''
  CREATE VIRTUAL TABLE IF NOT EXISTS zettelkasten
    USING fts5(title, body, tags, mtime UNINDEXED, prefix = 3, tokenize = "porter unicode61");
''')

db.execute('''
  INSERT INTO zettelkasten (zettelkasten, rank) VALUES('rank', 'bm25(2.0, 1.0, 5.0, 0.0)');
''')

existing = {}

raw_existing = db.execute("SELECT title, mtime FROM zettelkasten;")

for row in raw_existing:
    existing[row['title']] = int(row['mtime'])

for path in Path('.').glob('*.md'):
    mtime = int(os.path.getmtime(path))
    if not check_key_dict_list(path.name, existing):
      contents = path.read_text()
      tags = " ".join(re.findall(r'#[\w-]+', contents))
      args = (path.name, contents, '', mtime)
      db.execute("INSERT INTO zettelkasten (title, body, tags, mtime) VALUES (?, ?, ?, ?);", args)
    elif mtime > existing[path.name]:
      contents = path.read_text()
      tags = " ".join(re.findall(r'#[\w-]+', contents))
      args = (contents, '', mtime, path.name)
      db.execute("UPDATE zettelkasten SET body = ?, tags = ?, mtime = ? WHERE title = ?;", args)

    existing[path.name] = 'VISITED'

for key in existing:
    if existing[key] != 'VISITED':
       db.execute("DELETE FROM zettelkasten WHERE title = ?;", (key))

file_cat = ''
opts, args = getopt.getopt(sys.argv[1:],"f:")
for opt, arg in opts:
      if opt in ("-f"):
        file_cat = arg

if file_cat:
    if len(args) > 0 and args[0]:
        results = db.execute('''
          SELECT rank, highlight(zettelkasten, 1, '\x1b[0;41m', '\x1b[0m') AS body
            FROM zettelkasten WHERE title = ? AND zettelkasten MATCH ? ORDER BY rank;
        ''', (file_cat, args[0]))
    else:
        results = db.execute("SELECT rank, body FROM zettelkasten WHERE title = ?;", (file_cat,))
elif args[0]:
    results = db.execute('''
      SELECT rank, highlight(zettelkasten, 0, '\x1b[0;41m', '\x1b[0m') AS body, tags
        FROM zettelkasten WHERE zettelkasten MATCH ? ORDER BY rank;
    ''', (re.sub("-_", " ", " ".join(args)),))
else:
    results = db.execute("SELECT title FROM zettelkasten;")

for result in results:
  print(result['body'])
