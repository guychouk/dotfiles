#!/usr/bin/env zsh

# ==============================================================================
#  kpf - Kubernetes Service Port Forwarder
# ==============================================================================
# Description:
#
# This script automates the process of port-forwarding for Kubernetes services.
# It reads the current namespace from your kubectl configuration and sets up
# port forwarding for specified services from a Kubernetes cluster to your
# local machine. This is particularly useful for accessing services locally
# for development or testing purposes.
#
# Usage:
#
# ./kpf.sh <service_name>[:<local_port>:<remote_port>] ...
#
# Parameters:
#
# <service_name> - The name of the Kubernetes service to forward.
# <local_port>   - The local port to forward to (optional).
# <remote_port>  - The remote service port to forward from (optional).
# 
# If <local_port> and <remote_port> are not provided, the script will attempt to
# use the default ports defined by the service. When providing ports, both <local_port>
# and <remote_port> *must* be specified!
#
# Example:
# ./kpf.sh my-service:6969:8080 my-service-3
#
# This forwards:
# - local port 6969 to remote port 8080 of my-service
# - default port of my-service-3 to an automatically assigned local port
# ==============================================================================

declare -A service_map

for svc in "$@"; do
  if [[ $svc =~ : ]]; then
    local_port=
    remote_port=
    IFS=':' read -r svc_name local_port remote_port <<< "$svc"
    if [[ -z $remote_port ]]; then
      remote_port=$(kubectl get svc -l "app.kubernetes.io/name=$svc_name" -o json | jq '.spec.ports[0].port')
    fi
    service_map["$svc_name:$local_port"]="$local_port:$remote_port"
  else
    port=$(kubectl get svc $svc -o json | jq '.spec.ports[0].port')
    service_map["$svc:$port"]="$port:$port"
  fi
done

trap 'kill 0' SIGINT

# Check which shell is being used
if [ -n "$BASH_VERSION" ]; then
  # Bash-specific associative array handling
  for key in "${!service_map[@]}"; do
    pf="${service_map[$key]}"
    svc="${key%%:*}"
    kubectl port-forward --address 127.0.0.1 services/$svc $pf &
  done
elif [ -n "$ZSH_VERSION" ]; then
  # Zsh-specific associative array handling
  # zsh adds quotes to map keys so we need to remove them ¯\_(ツ)_/¯
  for key pf in "${(@kv)service_map}"; do
    key=${(Q)key}
    svc=${key%%:*}
    kubectl port-forward --address 127.0.0.1 services/$svc $pf &
  done
fi

wait
